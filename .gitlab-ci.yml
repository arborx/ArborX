# see https://docs.gitlab.com/ce/ci/yaml/README.html for all available options

variables:
  SCHEDULER_PARAMETERS: "-J ArborX_CI -W 1:00 -nnodes 1 -P CSC333 -alloc_flags smt1"

stages:
  - buildDependencies
  - buildArborX
  - runBenchmarks
  - compare

.LoadModules:
  before_script:
    - module load gcc/7.4.0 cuda/10.1.243 cmake/3.15.2 git/2.20.1 spectrum-mpi/10.3.1.2-20200121

.BuildBoost:
  extends: .LoadModules
  stage: buildDependencies
  script:
    - BOOST_VERSION=1.67.0 &&
      BOOST_VERSION_UNDERSCORE=$(echo "$BOOST_VERSION" | sed -e "s/\./_/g") &&
      BOOST_URL=https://dl.bintray.com/boostorg/release/${BOOST_VERSION}/source &&
      BOOST_ARCHIVE=boost_${BOOST_VERSION_UNDERSCORE}.tar.bz2 &&
      wget --quiet ${BOOST_URL}/${BOOST_ARCHIVE} &&
      mkdir -p boost &&
      tar -xf ${BOOST_ARCHIVE} -C boost --strip-components=1 &&
      cd boost &&
      ./bootstrap.sh --prefix=/ccsopen/proj/csc333/boost.install &&
      ./b2 -j8 variant=release cxxflags=-w install
  tags:
    - nobatch

.BuildBenchmark:
  extends: .LoadModules
  stage: buildDependencies
  script:
    - git clone https://github.com/google/benchmark.git -b v1.4.1 &&
      cd benchmark &&
      git clone https://github.com/google/googletest.git -b release-1.8.1 &&
      mkdir build && cd build &&
      cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_COMPILER=g++ -DBENCHMARK_ENABLE_TESTING=OFF -DCMAKE_INSTALL_PREFIX=/ccsopen/proj/csc333/benchmark.install .. &&
      make && make install
  tags:
    - nobatch

.BuildKokkos:
  extends: .LoadModules
  stage: buildDependencies
  script:
    - git clone --depth=1 --branch 3.1.00 https://github.com/kokkos/kokkos.git &&
      cd kokkos &&
      mkdir build &&
      cd build &&
      cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/ccsopen/proj/csc333/kokkos.install -DCMAKE_CXX_COMPILER=${CI_PROJECT_DIR}/kokkos/bin/nvcc_wrapper -DCMAKE_CXX_EXTENSIONS=OFF -DKokkos_ENABLE_SERIAL=ON -DKokkos_ENABLE_OPENMP=ON -DKokkos_ENABLE_CUDA=ON -DKokkos_ENABLE_CUDA_LAMBDA=ON -DKokkos_ARCH_POWER9=ON -DKokkos_ARCH_VOLTA70=ON .. &&
      make &&
      make install
  tags:
    - nobatch

BuildArborXBranch:
  extends: .LoadModules
  stage: buildArborX
  script:
    - git fetch
    - export BRANCH_HASH=`git rev-parse HEAD`
    - git merge origin/master
    - mkdir build && cd build &&
      cmake -DCMAKE_PREFIX_PATH="/ccsopen/proj/csc333/kokkos.install;/ccsopen/proj/csc333/benchmark.install;/ccsopen/proj/csc333/boost.install"
            -DCMAKE_CXX_COMPILER=/ccsopen/proj/csc333/kokkos.install/bin/nvcc_wrapper
            -DARBORX_ENABLE_MPI=ON
            -DARBORX_ENABLE_TESTS=OFF
            -DARBORX_ENABLE_BENCHMARKS=ON
            -DARBORX_PERFORMANCE_TESTING=ON .. &&
      make ArborX_BoundingVolumeHierarchy.exe
    - cp ./benchmarks/bvh_driver/ArborX_BoundingVolumeHierarchy.exe /ccsopen/proj/csc333/ArborX_BoundingVolumeHierarchyBranch${BRANCH_HASH}.exe
    - echo export BRANCH_HASH=${BRANCH_HASH} > ${CI_PROJECT_DIR}/branch_hash
  tags:
    - nobatch
  artifacts:
    paths:
      - ${CI_PROJECT_DIR}/branch_hash

BuildArborXMaster:
  extends: .LoadModules
  stage: buildArborX
  script:
    - git fetch
    - export BRANCH_HASH=`git rev-parse HEAD`
    - git worktree add -f ${CI_PROJECT_DIR}/arborx-master origin/master
    - cd ${CI_PROJECT_DIR}/arborx-master
    - mkdir build_master && cd build_master &&
      cmake -DCMAKE_PREFIX_PATH="/ccsopen/proj/csc333/kokkos.install;/ccsopen/proj/csc333/benchmark.install;/ccsopen/proj/csc333/boost.install"
            -DCMAKE_CXX_COMPILER=/ccsopen/proj/csc333/kokkos.install/bin/nvcc_wrapper
            -DARBORX_ENABLE_MPI=ON
            -DARBORX_ENABLE_TESTS=OFF
            -DARBORX_ENABLE_BENCHMARKS=ON
            -DARBORX_PERFORMANCE_TESTING=ON .. &&
      make ArborX_BoundingVolumeHierarchy.exe
    - cp ./benchmarks/bvh_driver/ArborX_BoundingVolumeHierarchy.exe /ccsopen/proj/csc333/ArborX_BoundingVolumeHierarchyMaster${BRANCH_HASH}.exe
  tags:
    - nobatch

RunBenchmarks:
  extends: .LoadModules
  stage: runBenchmarks
  script:
    - source ${CI_PROJECT_DIR}/branch_hash
    - export OMP_PROC_BIND=spread
    - export OMP_PLACES=threads
    - export JSRUN_OPTIONS="-n 1 -a 1 -c 42 -g 1 -r 1 -l CPU-CPU -d packed -b packed:42"
    - export BENCHMARK_OPTIONS="--benchmark_repetitions=15
                                --exact-spec serial/1000/1000/10/1/0/0/2
                                --exact-spec serial/10000/10000/10/1/0/0/2
                                --exact-spec serial/100000/100000/10/1/0/0/2
                                --exact-spec serial/1000/1000/10/1/0/1/3
                                --exact-spec serial/10000/10000/10/1/0/1/3
                                --exact-spec serial/100000/100000/10/1/0/1/3
                                --exact-spec openmp/1000/1000/10/1/0/0/2
                                --exact-spec openmp/10000/10000/10/1/0/0/2
                                --exact-spec openmp/100000/100000/10/1/0/0/2
                                --exact-spec openmp/1000/1000/10/1/0/1/3
                                --exact-spec openmp/10000/10000/10/1/0/1/3
                                --exact-spec openmp/100000/100000/10/1/0/1/3
                                --exact-spec cuda/10000/10000/10/1/0/0/2
                                --exact-spec cuda/100000/100000/10/1/0/0/2
                                --exact-spec cuda/1000000/1000000/10/1/0/0/2
                                --exact-spec cuda/10000/10000/10/1/0/1/3
                                --exact-spec cuda/100000/100000/10/1/0/1/3
                                --exact-spec cuda/1000000/1000000/10/1/0/1/3"
    - jsrun ${JSRUN_OPTIONS} /ccsopen/proj/csc333/ArborX_BoundingVolumeHierarchyBranch${BRANCH_HASH}.exe ${BENCHMARK_OPTIONS} --benchmark_out_format=json --benchmark_out=/ccsopen/proj/csc333/arborx-branch${BRANCH_HASH}.json
    - jsrun ${JSRUN_OPTIONS} /ccsopen/proj/csc333/ArborX_BoundingVolumeHierarchyMaster${BRANCH_HASH}.exe ${BENCHMARK_OPTIONS} --benchmark_out_format=json --benchmark_out=/ccsopen/proj/csc333/arborx-master${BRANCH_HASH}.json
    - rm /ccsopen/proj/csc333/ArborX_BoundingVolumeHierarchyBranch${BRANCH_HASH}.exe /ccsopen/proj/csc333/ArborX_BoundingVolumeHierarchyMaster${BRANCH_HASH}.exe
  tags:
    - batch

CompareResults:
  stage: compare
  script:
    - module load python/3.6.6-anaconda3-5.3.0
    - source ${CI_PROJECT_DIR}/branch_hash
    - /ccsopen/proj/csc333/tools/compare.py benchmarks /ccsopen/proj/csc333/arborx-master${BRANCH_HASH}.json /ccsopen/proj/csc333/arborx-branch${BRANCH_HASH}.json | grep "median" | tee ${CI_PROJECT_DIR}/regression${CI_PIPELINE_ID}
    - rm /ccsopen/proj/csc333/arborx-branch${BRANCH_HASH}.json /ccsopen/proj/csc333/arborx-master${BRANCH_HASH}.json
  tags:
    - nobatch
  artifacts:
    paths:
      - ${CI_PROJECT_DIR}/regression${CI_PIPELINE_ID}
